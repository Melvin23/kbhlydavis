<?php
// $Id$

/**
 * @file
 * Implementation of Drupal core hooks.
 *
 */

/**
 * Implementation of hook_perm().
 */
function kkblyd_order_perm() {
  return array('administer lydbog order');
}

/**
 * Implementation of hook_nodeapi().
 */
function kkblyd_order_nodeapi(&$node, $op, $teaser = NULL, $page = NULL) {
  if ($node->type == 'catalog' && !$teaser && $page) {
    switch ($op) {
      case 'view':
        $test = kkblyd_order_order_page();
        drupal_set_title($node->title);
        $node->content = array('form' => array('#value' => $test));
        break;
    }
  }
  if ($node->type == 'sound_article') {
    switch ($op) {
      case 'presave':
        // Set publish date to noon of the selected date.
        $node->publish_on = strtotime($node->field_publish_date[0]['value']) + 12 * 3600;
        // Set publish date to noon +7 days of the selected date.
        $node->ubpublish_on = strtotime($node->field_publish_date[0]['value']) + 12 * 3600 + 7 * 86400;
        break;
    }
  }
}

function kkblyd_order_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'sound_article_node_form') {
    $form['scheduler_settings']['#type'] = '';
    $form['scheduler_settings']['publish_on']['#type'] = 'value';
    $form['scheduler_settings']['publish_on']['#value'] = '';
    $form['scheduler_settings']['unpublish_on']['#type'] = 'value';
    $form['scheduler_settings']['unpublish_on']['#value'] = '';
    $form['#submit'][] = 'kkblyd_order_node_submit';
  }
}

function kkblyd_order_node_submit($form, &$form_state) {
  if (isset($form['nid']['#value']) && !empty($form['nid']['#value'])) {
    $form['#redirect'] = '<front>';
  }
  else {
    $form['#redirect'] = 'node/add/sound-article';
  }
}


/**
 * Implementation of hook_menu().
 */
function kkblyd_order_menu() {
  $items = array();

  $items['admin/kkblyd'] = array(
    'title' => t('KKB-LYD settings'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kkblyd_order_admin_lydbog_form'),
    'access arguments' => array('administer lydbog order'),
    'file' => 'kkblyd_order.admin.inc',
    );

  $items['admin/kkblyd/settings'] = array(
    'title' => t('KKB-LYD settings'),
    'weight' => -10,
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['bestil'] = array(
    'title' => t('Order sound news'),
    'page callback' => 'kkblyd_order_lydavis_page',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implementation of hook_mail().
 */
function kkblyd_order_mail($key, &$message, $params) {
  $message['headers'] = array_merge($message['headers'], $params['headers']);
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['message'];
}

/**
 * Callback function to display the ordering pages.
 */
function kkblyd_order_order_page() {
  $output = drupal_get_form('kkblyd_order_order_form');
  return $output;
}

/**
 * Ordering form to display a list of soundbooks with their product types.
 */
function kkblyd_order_order_form() {
  $form = array();
  $form['lydbog'] = array(
    '#type' => 'fieldset',
    '#title' => t('Sound books'),
    '#collapsible' => FALSE,
    '#tree' => TRUE,
    '#attributes' => array('class' => 'sound-book'),
  );
  $nid = arg(1);
  $query = db_query("SELECT c.field_author_value, nr.title, nr.body, c.nid
                     FROM {content_type_lydbog} AS c
                     JOIN {node_revisions} AS nr ON c.nid = nr.nid
                     WHERE c.field_catalog_node_nid = %d
                     ORDER BY c.field_author_value;", $nid);
  while ($row = db_fetch_array($query)) {
    $form['lydbog'][$row['nid']] = array(
      '#type' => 'fieldset',
      '#title' => $row['field_author_value'] . ' - ' . $row['title'],
      '#collapsible' => FALSE,
    );
    $form['lydbog'][$row['nid']]['body'] = array(
      '#prefix' => '<p class="description">',
      '#suffix' => '</p>',
      '#value' => $row['body'],
    );
    $query_a = db_query("SELECT field_product_value AS p, delta FROM {content_field_product} WHERE nid = %d", $row['nid']);
    while ($row_a = db_fetch_array($query_a)) {
      $form['lydbog'][$row['nid']]['product'][$row_a['delta']] = array(
        '#type' => 'textfield',
        '#title' => $row_a['p'],
        '#size' => 2,
      );
    }
    $query_b = db_query("SELECT field_product_non_buy_value AS p, delta FROM {content_field_product_non_buy} WHERE nid = %d", $row['nid']);
    while ($row_b = db_fetch_array($query_b)) {
      $form['lydbog'][$row['nid']]['not_buy'][$row_a['delta']] = array(
        '#value' => '<p class="form-item">' . $row_b['p'] . '</p>',
      );
    }
  }
  $form['contact'] = array(
    '#type' => 'fieldset',
    '#title' => t('Contact infomation'),
    '#collapsible' => FALSE,
  );
  $form['contact']['mail-phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Email / phone'),
    '#description' => t('Enter your phone number or email address'),
    '#required' => TRUE,
  );
  $form['contact']['address'] = array(
    '#type' => 'textarea',
    '#title' => t('Address'),
    '#description' => t('Enter your address. You can also write comments to your order here.'),
    '#required' => TRUE,
  );
  $form['contact']['ean'] = array(
    '#type' => 'textfield',
    '#title' => t('EAN'),
    '#description' => t('Enter your EAN number'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send order to KKB-LYD'),
  );
  return $form;
}

/**
 * Validate handler for kkblyd_order_order_form().
 */
function kkblyd_order_order_form_validate($form, &$form_state) {

  $values = $form_state['values'];
  $values['mail-phone'] = $pm;
  // Validation to check is phone number or email.
  if (preg_match('/[\+\d]/', $pm)) {
    $value = str_replace(' ', '', $pm);
  }
  if (preg_match('/^[+45][\d]{1,8}$|^[\d]{1,8}$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else if (preg_match('/^[a-z0-9_\+-]+(\.[a-z0-9_\+-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*\.([a-z]{2,4})$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else {
    form_set_error($key, t("You must enter a valid phone number or email address"));
  }
  // We loop through all book values.
  foreach ($values['lydbog'] as $nid => $array) {
    foreach ($array['product'] as $key => $value) {
      // Validation to check that value is an integer.
      if (!empty($value) && preg_match('/[^\d]/', $value)) {
        form_set_error("lydbog][$nid][product][$key", t('You must enter a whole number'));
      }
      if (!empty($value)) {
        $has_value = TRUE;
      }
    }
  }
  if (!$has_value) {
    form_set_error('lydbog', t("You must enter an amount for one of the products to make an order")) ;
  }
}

/**
 * Submit handler for kkblyd_order_order_form().
 */
function kkblyd_order_order_form_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $products = array();
  foreach ($values['lydbog'] as $nid => $array) {
    foreach ($array['product'] as $delta => $value) {
      // Validation to check that value is an integer.
      if (!empty($value)) {
        $products[] = array(
          'info' => $form['lydbog'][$nid]['#title'],
          'product' => $form['lydbog'][$nid]['product'][$delta]['#title'],
          'amount' => $value
        );
      }
    }
  }
  $message = theme('kkblyd_order_mail', $values, $products);
  $subject = t("Order from @site", array('@site' => variable_get('site_name', "KKB-LYD")));
  $headers = array('X-Mailer' => 'Drupal (PHP/'. phpversion() .')');
  $from = '"KKB Lyd order" <order@kbhlydavis.dk>';
  $address = variable_get('kkblyd_order_lydbog_send_mail', '');
  if (!empty($address)) {
    drupal_mail(
      'kkblyd_order',
      'order',
      $address,
      user_preferred_language($user),
      array('message' => $message, 'subject' => $subject, 'headers' => $headers),
      $from
    );
    drupal_set_message("Your order has been sent and you will be contacted shortly.");
  }
}

function kkblyd_order_katalog_page() {
  $sql = "SELECT nid FROM {node}
          WHERE status = 1 AND type = 'catalog';";
  $result = db_query($sql);
  $markup = '';
  while ($row = db_result($result)) {
    $node = node_load($row);
    $link = l($node->title, 'katalog/' . $node->nid);
    $markup .= theme('kkblyd_order_katalog', $link, $node);
  }
  return $markup;
}

/**
 * Implementation of hook_theme().
 */
function kkblyd_order_theme() {
  $items = array();
  $items['kkblyd_order_katalog'] = array(
    'arguments' => array('link' => NULL, 'node' => NULL),
  );
  $items['kkblyd_order_mail'] = array(
    'arguments' => array('form_values' => NULL, 'products' => NULL),
    'template' => 'kkblyd_order-mail',
  );
  $items['kkblyd_order_sound_mail'] = array(
    'arguments' => array('form_values' => NULL, 'products' => NULL),
    'template' => 'kkblyd_order-sound-mail',
  );
  $items['kkblyd_order_lydavis_form'] = array(
    'arguments' => array('form' => NULL),
  );
  return $items;
}

function theme_kkblyd_order_katalog($link, $node) {
  $result = '';
  $result .= '<div class="container">';
  $result .= '<h2 class="title">'.$link.'</h2>';
  $result .= '<p class="description">'.check_plain($description).'</p>';
  $result .= '</div>';
  return $result;
}

function kkblyd_order_lydavis_page() {
  $output = drupal_get_form('kkblyd_order_lydavis_form');
  return $output;
}

function kkblyd_order_lydavis_form() {
  $form = array();
  $form['tape'] = array(
    '#tree' => TRUE,
  );
  $form['cd'] = array(
    '#tree' => TRUE,
  );
  $form['area_data'] = array(
    '#type' => 'value',
    '#value' => array()
  );
  $sql = "SELECT name, tid FROM {term_data}
          WHERE vid = 2;";
  $result = db_query($sql);
  while ($row = db_fetch_array($result)) {
    $form['tape'][$row['tid']] = array(
      '#type' => 'checkbox',
    );
    $form['cd'][$row['tid']] = array(
      '#type' => 'checkbox',
    );
    $form['area_data']['#value'][$row['tid']] = $row['name'];
  }
  $form['info'] = array(
    '#type' => 'textarea',
    '#title' => t('Name and address'),
    '#required' => TRUE,
    '#cols' => 40,
    '#rows' => 5,
  );
  $form['mail-phone'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail / phone'),
    '#description' => t('Enter your phone number or email address'),
    '#size' => 40,
    '#required' => TRUE,
  );
  $form['member'] = array(
    '#type' => 'checkbox',
    '#title' => t('Member'),
    '#description' => t('Check if you are you member of Danish blind community'),
    '#default_value' => 0,
  );
  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comment'),
    '#description' => t('Optional enter a comment or message along with your request.'),
    '#size' => 40,
    '#rows' => 5,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send request'),
  );
  return $form;
}

/**
 * Validate handler for kkblyd_order_lydavis_form.
 */
function kkblyd_order_lydavis_form_validate($form, &$form_state) {
  $values = $form_state['values'];
  $values['mail-phone'] = $pm;
  // Validation to check is phone number or email.
  if (preg_match('/[\+\d]/', $pm)) {
    $value = str_replace(' ', '', $pm);
  }
  if (preg_match('/^[+45][\d]{1,8}$|^[\d]{1,8}$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else if (preg_match('/^[a-z0-9_\+-]+(\.[a-z0-9_\+-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*\.([a-z]{2,4})$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else {
    form_set_error($key, t("You must enter a valid phone number or email address"));
  }
  $tapes = array_filter($values['tape']);
  $cds = array_filter($values['cd']);
  if (empty($tapes) && empty($cds)) {
    form_set_error('', t('You must select at least 1 tape or cd to recieve'));
  }
}

function kkblyd_order_lydavis_form_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $products = array();
  $tapes = array_keys(array_filter($values['tape']));
  $cds = array_keys(array_filter($values['cd']));

  foreach ($tapes as $tid ) {
    $products[] = array(
      'type' => t('Tape'),
      'term' => taxonomy_get_term($tid),
    );
  }
  foreach ($cds as $tid ) {
    $products[] = array(
      'type' => t('CD'),
      'term' => taxonomy_get_term($tid),
    );
  }
  $message = theme('kkblyd_order_sound_mail', $values, $products);
  $subject = t("Subscription to sound news from @site", array('@site' => variable_get('site_name', "KKB-LYD")));
  $headers = array('X-Mailer' => 'Drupal (PHP/'. phpversion() .')');
  $from = '"KKB Lyd subscription" <subscription@kbhlydavis.dk>';
  $address = variable_get('kkblyd_order_subscription_send_mail', '');
  if (!empty($address)) {
    drupal_mail(
      'kkblyd_order',
      'order',
      $address,
      user_preferred_language($user),
      array('message' => $message, 'subject' => $subject, 'headers' => $headers),
      $from
    );
    drupal_set_message("Your subscription has been sent and you will be contacted shortly.");
  }
}

function kkblyd_order_playlist($array) {
  $txt = 'http://localhost/kkb-lyd/files/lyd-artikkel/Django_Dose_Tracking_Trunk_-_Episode_1__09_21_2009.mp3';
  drupal_set_header('Content-Type: audio/x-mpegurl; charset=utf-8');
  drupal_set_header('Content-Disposition: attachment; filename="playlist.m3u"');
  echo $txt;
}

function theme_kkblyd_order_lydavis_form($form) {
  $header = array(t('City area'), t('CD'), t('Tape'));
  $rows = array();
  foreach ($form['area_data']['#value'] as $tid=> $name) {
    $rows[] = array($name, drupal_render($form['cd'][$tid]), drupal_render($form['tape'][$tid]));
  }
  $output = theme('table', $header, $rows);
  $output .= drupal_render($form);
  return $output;
}