<?php
// $Id$

/**
 * @file
 * Implementation of Drupal core hooks.
 *
 */

/**
 * Implementation of hook_perm().
 */
function kkblyd_order_perm() {
  return array('administer lydbog order');
}

/**
 * Implementation of hook_menu().
 */
function kkblyd_order_menu() {
  $items = array();

  $items['katalog/%'] = array(
    'title' => 'Lydbog',
    'description' => '',
    'page callback' => 'kkblyd_order_order_page',
    'access arguments' => array('order kkblyd lydbog'),
  );

  $items['admin/kkblyd'] = array(
     'title' => 'KKB-LYD',
     'description' => 'KKB-LYD administration.',
     'position' => 'right',
     'weight' => -5,
     'page callback' => 'system_admin_menu_block_page',
     'access arguments' => array('administer site configuration'),
     'file' => 'system.admin.inc',
     'file path' => drupal_get_path('module', 'system'),
    );

  $items['admin/kkblyd/lydbog-order'] = array(
    'title' => 'Lydbog order',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('kkblyd_order_admin_lydbog_form'),
    'access arguments' => array('administer lydbog order'),
    'file' => 'kkblyd_order.admin.inc',
  );

  $items['katalog'] = array(
    'title' => 'Katalog',
    'page callback' => 'kkblyd_order_katalog_page',
    'access arguments' => array('access content'),
  );
  $items['bestil'] = array(
    'title' => t('Order sound news'),
    'page callback' => 'kkblyd_order_lydavis_page',
    'access arguments' => array('access content'),
  );

  return $items;
}

/**
 * Implementation of hook_mail().
 */
function kkblyd_order_mail($key, &$message, $params) {
  $message['headers'] = array_merge($message['headers'], $params['headers']);
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['message'];
}

/**
 * Callback function to display the ordering pages.
 */
function kkblyd_order_order_page() {
  $output = drupal_get_form('kkblyd_order_order_form');
  return $output;
}

/**
 * Ordering form to display a list of soundbooks with their product types.
 */
function kkblyd_order_order_form() {
  $form = array();
  $term = arg(1);
  $query = db_query("SELECT c.field_author_value, nr.title, nr.body, c.nid, p.field_product_value, p.delta
                     FROM {content_type_lydbog} AS c
                     JOIN {content_field_product} AS p ON p.nid = c.nid
                     JOIN {node} AS n on c.nid = n.nid
                     JOIN {node_revisions} AS nr ON c.nid = nr.nid
                     JOIN {term_node} AS tn ON c.nid = tn.nid
                     JOIN {term_data} AS t ON tn.tid = t.tid
                     WHERE tn.tid = %d
                     AND n.type = 'lydbog'
                     ORDER BY c.field_author_value;", $term);
  while ($row = db_fetch_array($query)) {
    if (!isset($form['lydbog'])) {
      $form['lydbog'] = array(
        '#type' => 'fieldset',
        '#title' => t('Sound books'),
        '#collapsible' => FALSE,
        '#tree' => TRUE,
      );
    }
    if (!isset($form['lydbog'][$row['nid']])) {
      $form['lydbog'][$row['nid']] = array(
        '#type' => 'fieldset',
        '#title' => $row['field_author_value'] . ' - ' . $row['title'],
        '#collapsible' => FALSE,
      );
      $form['lydbog'][$row['nid']]['body'] = array(
        '#value' => $row['body'],
      );
      
    }
    $form['lydbog'][$row['nid']][$row['delta']] = array(
      '#type' => 'textfield',
      '#title' => $row['field_product_value'],
      '#size' => 2,
    );
  }
  $form['contact'] = array(
    '#type' => 'fieldset',
    '#title' => t('Contact infomation'),
    '#collapsible' => FALSE,
  );
  $form['contact']['mail-phone'] = array(
    '#type' => 'textfield',
    '#title' => t('Email / phone'),
    '#description' => t('Enter your phone number or email address'),
    '#required' => TRUE,
  );
  $form['contact']['address'] = array(
    '#type' => 'textarea',
    '#title' => t('Address'),
    '#description' => t('Enter your address. You can also write comments to your order here.'),
    '#required' => TRUE,
  );
  $form['contact']['ean'] = array(
    '#type' => 'textfield',
    '#title' => t('EAN'),
    '#description' => t('Enter your EAN number'),
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send order to KKB-LYD'),
  );
  return $form;
}

/**
 * Validate handler for kkblyd_order_order_form().
 */
function kkblyd_order_order_form_validate($form, &$form_state) {
  $values = $form_state['values'];
  $values['mail-phone'] = $pm;
  // Validation to check is phone number or email.
  if (preg_match('/[\+\d]/', $pm)) {
    $value = str_replace(' ', '', $pm);
  }
  if (preg_match('/^[+45][\d]{1,8}$|^[\d]{1,8}$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else if (preg_match('/^[a-z0-9_\+-]+(\.[a-z0-9_\+-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*\.([a-z]{2,4})$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else {
    form_set_error($key, t("You must enter a valid phone number or email address"));
  }

  // We loop through all book values.
  foreach ($values['lydbog'] as $nids) {
    foreach ($nids as $key => $value) {
      // Validation to check that value is an integer.
      if (!empty($value) && preg_match('/[^\d]/', $value)) {
        form_set_error($key, t('You must enter a whole number'));
      }
      if (!empty($value)) {
        $has_value = TRUE;
      }
    }
  }
  if (!$has_value) {
    form_set_error('lydbog', t("You must enter an amount for one of the products to make an order")) ;
  }
}

/**
 * Submit handler for kkblyd_order_order_form().
 */
function kkblyd_order_order_form_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $products = array();
  foreach ($values['lydbog'] as $nid => $array) {
    foreach ($array as $delta => $value) {
      // Validation to check that value is an integer.
      if (!empty($value)) {
        $products[] = array(
          'info' => $form['lydbog'][$nid]['#title'],
          'product' => $form['lydbog'][$nid][$delta]['#title'],
          'amount' => $value
        );
      }
    }
  }
  $message = theme('kkblyd_order_mail', $values, $products);
  $subject = t("Order from @site", array('@site' => variable_get('site_name', "KKB-LYD")));
  $headers = array('X-Mailer' => 'Drupal (PHP/'. phpversion() .')');
  $from = '"KKB Lyd order" <order@kbhlydavis.dk>';
  $address = variable_get('kkblyd_order_lydbog_send_mail', '');
  if (!empty($address)) {
    drupal_mail(
      'kkblyd_order',
      'order',
      $address,
      user_preferred_language($user),
      array('message' => $message, 'subject' => $subject, 'headers' => $headers),
      $from
    );
    drupal_set_message("Your order has been sent and you will be contacted shortly.");
  }
}

function kkblyd_order_katalog_page() {
  $sql = "SELECT name, description, tid
          FROM {term_data}
          WHERE vid = 1;";
  $result = db_query($sql);
  $markup = '';
  while ($row = db_fetch_array($result)) {
    $link = l($row['name'], 'katalog/' . $row['tid']);
    $markup .= theme('kkblyd_order_katalog', $link, $row['description']);
  }
  return $markup;
}

/**
 * Implementation of hook_theme().
 */
function kkblyd_order_theme() {
  $items = array();
  $items['kkblyd_order_katalog'] = array(
    'arguments' => array('link' => NULL, 'description' => NULL),
  );
  $items['kkblyd_order_mail'] = array(
    'arguments' => array('form_values' => NULL, 'products' => NULL),
    'template' => 'kkblyd_order-mail',
  );
  $items['kkblyd_order_sound_mail'] = array(
    'arguments' => array('form_values' => NULL, 'products' => NULL),
    'template' => 'kkblyd_order-sound-mail',
  );
  return $items;
}

function theme_kkblyd_order_katalog($link, $description) {
  $result = '';
  $result .= '<div class="container">';
  $result .= '<h2 class="title">'.$link.'</h2>';
  $result .= '<p class="description">'.check_plain($description).'</p>';
  $result .= '</div>';
  return $result;
}

function kkblyd_order_lydavis_page() {
  $output = '';
  $output .= drupal_get_form('kkblyd_order_lydavis_form');
  return $output;
}

function kkblyd_order_lydavis_form() {
  $form = array();
  $form['area'] = array(
    '#type' => 'fieldset',
    '#title' => t('City area'),
    '#tree' => TRUE,
  );
  $sql = "SELECT name, tid FROM {term_data}
          WHERE vid = 2;";
  $result = db_query($sql);
  while ($row = db_fetch_array($result)) {
    $form['area'][$row['tid']] = array(
      '#type' => 'fieldset',
      '#title' => t(check_plain($row['name'])),
      '#description' => t('Select what type of material you want to recieve from this area'),
      '#collapsible' => TRUE,
    );
    $form['area'][$row['tid']]['tape'] = array(
      '#type' => 'checkbox',
      '#title' => t('Tape'),
      '#default_value' => 0,
    );
    $form['area'][$row['tid']]['cd'] = array(
      '#type' => 'checkbox',
      '#title' => t('Cd'),
      '#default_value' => 0,
    );
  }
  $form['info'] = array(
    '#type' => 'textarea',
    '#title' => t('Name and address'),
    '#required' => TRUE,
    '#cols' => 40,
    '#rows' => 5,
  );
  $form['mail-phone'] = array(
    '#type' => 'textfield',
    '#title' => t('E-mail / phone'),
    '#description' => t('Enter your phone number or email address'),
    '#size' => 40,
    '#required' => TRUE,
  );
  $form['member'] = array(
    '#type' => 'checkbox',
    '#title' => t('Member'),
    '#description' => t('Check if you are you member of Danish blind community'),
    '#default_value' => 0,
  );
  $form['comment'] = array(
    '#type' => 'textarea',
    '#title' => t('Comment'),
    '#description' => t('Optional enter a comment or message along with your request.'),
    '#size' => 40,
    '#rows' => 5,
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Send request'),
  );
  return $form;
}

/**
 * Validate handler for kkblyd_order_lydavis_form.
 */
function kkblyd_order_lydavis_form_validate($form, &$form_state) {
  $values = $form_state['values'];
  $values['mail-phone'] = $pm;
  // Validation to check is phone number or email.
  if (preg_match('/[\+\d]/', $pm)) {
    $value = str_replace(' ', '', $pm);
  }
  if (preg_match('/^[+45][\d]{1,8}$|^[\d]{1,8}$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else if (preg_match('/^[a-z0-9_\+-]+(\.[a-z0-9_\+-]+)*@[a-z0-9-]+(\.[a-z0-9-]+)*\.([a-z]{2,4})$/', $pm)) {
    $values['mail-phone'] = $pm;
  }
  else {
    form_set_error($key, t("You must enter a valid phone number or email address"));
  }
  foreach ($values['area'] as $area) {
    if ($area['tape'] || $area ['cd']) {
      $accept = TRUE;
      break;
    }
  }
  if (!$accept) {
    form_set_error('area', t('You must select at least 1 tape or cd to recieve'));
  }
}

function kkblyd_order_lydavis_form_submit($form, &$form_state) {
  global $user;
  $values = $form_state['values'];
  $products = array();
  foreach ($values['area'] as $tid => $area) {
    if ($area['tape']) {
      $products[] = array(
        'type' => t('Tape'),
        'term' => taxonomy_get_term($tid),
      );
    }
    if ($area['cd']) {
      $products[] = array(
        'type' => t('CD'),
        'term' => taxonomy_get_term($tid),
      );
    }
  }
  $message = theme('kkblyd_order_sound_mail', $values, $products);
  $subject = t("Subscription to sound news from @site", array('@site' => variable_get('site_name', "KKB-LYD")));
  $headers = array('X-Mailer' => 'Drupal (PHP/'. phpversion() .')');
  $from = '"KKB Lyd subscription" <subscription@kbhlydavis.dk>';
  $address = variable_get('kkblyd_order_subscription_send_mail', '');
  if (!empty($address)) {
    drupal_mail(
      'kkblyd_order',
      'order',
      $address,
      user_preferred_language($user),
      array('message' => $message, 'subject' => $subject, 'headers' => $headers),
      $from
    );
    drupal_set_message("Your subscription has been sent and you will be contacted shortly.");
  }
}