<?php
// $Id$

/**
 * @file
 * This is the file description for Kkblyd Pages module.
 *
 * In this more verbose, multi-line description, you can specify what this
 * file does exactly. Make sure to wrap your documentation in column 78 so
 * that the file can be displayed nicely in default-sized consoles.
 */

/**
 * Implementation of hook_perm().
 */
function kkblyd_pages_perm() {
  return array('administer kkblyd blocks');
}

/**
 * Implementaion of hook_theme().
 */
function kkblyd_pages_theme() {
  $items = array();
  $items['kkblud_pages_get_table_form'] = array(
    'arguments' => array('form' => NULL),
  );
  $items['kkblud_pages_table_render_article'] = array(
    'arguments' => array('values' => NULL),
  );
  $items['kkblud_pages_render_title_header'] = array(
    'arguments' => array('title' => NULL, 'note' => NULL),
  );
  $items['kkblyd_pages_todays_block'] = array(
    'arguments' => array(),
  );
  $items['kkblyd_pages_area_block'] = array(
    'arguments' => array(),
  );
  $items['kkblyd_pages_front_page_header_block'] = array(
    'arguments' => array(),
  );
  $items['kkblyd_pages_sounder_paper_header_block'] = array(
    'arguments' => array(),
  );
  return $items;
}

/**
 * Implementation of hook_menu().
 */
function kkblyd_pages_menu() {
  $items = array();

  $items['forside'] = array(
    'page callback' => 'kkblyd_pages_front_table',
    'access arguments' => array('access content'),
  );

  $items['lydavis/%'] = array(
    'page callback' => 'kkblyd_pages_weekly_table',
    'access arguments' => array('access content'),
  );

  $items['lydavis'] = array(
    'page callback' => 'kkblyd_pages_lydavis',
    'access arguments' => array('access content'),
  );

  $items['playlist/%'] = array(
    'title' => t('Get Playlist'),
    'page callback' => 'kkblyd_pages_make_playlist',
    'access arguments' => array('access content'),
  );

  $items['kategori/%'] = array(
      'title' => 'Taxonomy term',
      'page callback' => 'kkblyd_pages_taxonomy_table',
      'page arguments' => array(1),
      'access arguments' => array('access content'),
      'type' => MENU_CALLBACK,
    );

  return $items;
}

/**
 * Callback function that will generate the front page table view of articles.
 */
function kkblyd_pages_front_table() {
  _kkblyd_pages_feed_head(t('The daily sound article'), url('podcast/dagens'));
  drupal_add_js(drupal_get_path('module', 'kkblyd_pages') . '/form.js');
  if (date('H') > 11) {
    $date = date('Y-m-d');
  }
  else {
    $date = date('Y-m-d', time()-86400);
  }
  $output = '<div class="front-page-wrapper">';
  $output .= theme('kkblud_pages_render_title_header', t("Today's sound news:"), t("Single articles"));
  $output .= drupal_get_form('kkblud_pages_get_table_form', $date);
  $output .= '</div>';
  return $output;
}

/**
 * Callback function for lydavis, set to term id 6 = noerrebro.
 */
function kkblyd_pages_lydavis() {
  return kkblyd_pages_weekly_area_table('alle');
}

/**
 * Callback function that will generate monday - friday table view of articles
 */
function kkblyd_pages_weekly_table() {
  $date = arg(1);
  $choices = array('mandag', 'tirdag', 'onsdag', 'torsdag', 'fredag');
  if (!in_array($date, $choices)) {
    if ($date == 'alle') {
      return kkblyd_pages_weekly_area_table($date);
    }
    if (preg_match('/[^0-9]/', $date)) {
      return drupal_not_found();
    }
    else {
      return kkblyd_pages_weekly_area_table($date);
    }
  }
  $transform = array(
    'mandag' => 1,
    'tirsdag' => 2,
    'onsdag' => 3,
    'torsdag' => 4,
    'fredag' => 5
  );
  $week_day = $transform[$date];
  $today = date('N');
  $lookup = array(NULL, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6);
  $selected_date = date('Y-m-d', time()-($lookup[7 + $today - $week_day]) * 86400);
  if ((date('H') < 12) && ($today == $week_day)) {
    $selected_date = date('Y-m-d', time() - 7 * 86400);
  }
  drupal_add_js(drupal_get_path('module', 'kkblyd_pages') . '/form.js');
  return drupal_get_form('kkblud_pages_get_table_form', $selected_date);
}

/**
 * Callback function that will generate weekly area table view.
 */
function kkblyd_pages_weekly_area_table($tid) {
  if ($tid == 'alle') {
    drupal_add_js(drupal_get_path('module', 'kkblyd_pages') . '/form.js');
    $output = '<div class="area-page-wrapper">';
    $output .= theme('kkblud_pages_render_title_header', t('All of Copenhagen:'), t("Single articles"));
    $output .= drupal_get_form('kkblud_pages_get_table_form', $tid);
    $output .= '</div>';
    return $output;
  }
  $term = taxonomy_get_term($tid);
  if (empty($term) || $term->vid != 2 && $term->vid != 5) {
    return drupal_not_found();
  }
  _kkblyd_pages_feed_head(t('The daily sound article from @area', array('@area' => $term->name)), url('podcast/' . $term->tid));
  drupal_add_js(drupal_get_path('module', 'kkblyd_pages') . '/form.js');
  $output = '<div class="area-page-wrapper">';
  $output .= theme('kkblud_pages_render_title_header', $term->name . ':', t("Single articles"));
  $output .= drupal_get_form('kkblud_pages_get_table_form', $term);
  $output .= '</div>';
  return $output;
}

/**
 * The form that is used to generate the table views of articles.
 */
function kkblud_pages_get_table_form(&$form_state, $arg) {
  $form = array();
  $form['article'] = array(
    '#tree' => TRUE
  );

  $form['article_data'] = array(
    '#type' => 'value',
    '#value' => array(),
  );
  $query = kkblyd_pages_table_query($arg);
  while ($row = db_fetch_array($query)) {
    $node = new stdClass;
    $node->nid = $row['nid'];
    $node->vid = $row['vid'];
    $form['article'][$row['nid']] = array(
      '#type' => 'checkbox'
    );
    $file_data = unserialize($row['field_sound_article_data']);
    $form['article_data']['#value'][$row['nid']] = array(
      'terms' => taxonomy_node_get_terms($node),
      'title' => $row['title'],
      'duration' => preg_replace('/^0/', '', date('i:s', (int) $file_data['duration'])),
      'size' => number_format($row['filesize'] / 1000000, 2, ',', '.') . ' MB',
      'listen' => url($row['filepath'], array('absolute' => TRUE)),
      'download' => url('playlist/' . $row['nid'], array('absolute' => TRUE)),
    );
  }
  $form['download'] = array(
    '#type' => 'submit',
    '#value' => t('Download all the marked articles'),
    '#attributes' => array('class' => 'download'),
  );
  
  return $form;
}

/**
 * The validate handler for article form, used to generate the playlist.m3u file downloads.
 */
function kkblud_pages_get_table_form_validate($form, &$form_state) {
  $values = (array_filter($form_state['values']['article']));
  if (empty($values)) {
    form_set_error('article', '<a id="kkblyd-pages-table-goto" name="avis" href="#avis" ></a>' . t("You need to select minimum one article to download"));
  }
}

/**
 * The submit handler for article form, used to generate the playlist.m3u file downloads.
 */
function kkblud_pages_get_table_form_submit($form, &$form_state) {
  $checked = array_keys(array_filter($form_state['values']['article']));
  drupal_goto('playlist/' . join('-', $checked));
}

/**
 * Theme function for the article table form, used to generate the desired markup.
 */
function theme_kkblud_pages_get_table_form($form) {
  $output = '';
  $header = array();
  $rows = array();
  foreach ($form['article_data']['#value'] as $nid => $item) {
    foreach ($form['article_data']['#value'][$nid]['terms'] as $term) {
      if ($term->vid == 3) {
        $class = strtolower(substr($term->name, 0, 3));
      }
    }
    if (!$class) {
      $class = 'non';
    }
    $rows[] = array(
      'data' => array(
        array('data' => drupal_render($form['article'][$nid]), 'class' => 'td-1'),
        array('data' => '<span class="paper ' . $class . '"></span>' . theme('kkblud_pages_table_render_article', $form['article_data']['#value'][$nid]), 'class' => 'td-2'),
        array('data' => l('<span class="listen"></span><span class="text">' . t('Listen') . '</span>', $form['article_data']['#value'][$nid]['listen'], array('attributes' => array('class' => 'listen clear-block'), 'html' => TRUE)), 'class' => 'td-3'),
        array('data' => l('<span class="download"></span><span class="text">' . t('Download') . '</span>', $form['article_data']['#value'][$nid]['download'], array('attributes' => array('class' => 'download'), 'html' => TRUE)), 'class' => 'td-4')
      ),
      'class' => $class,
    );
  }

  $output .= theme('table', $header, $rows);
  $output .= '<div class="form-wrapper clear-block"><div class="form-wrapper-wrapper"><span class="download"></span>';
  $output .= drupal_render($form);
  $output .= '</div></div>';
  return $output;
}

/**
 * Theming function used to render the article cell in the article table view.
 */
function theme_kkblud_pages_table_render_article($values) {
  $output = '<div class="wrapper">';
  $output .= '<p class="title">' . check_plain($values['title']) . '</p>';
  $output .= '<span class="info">' . $values['duration'] . ' ' . $values['size'] . '</span>';
  $terms = array();
  foreach ($values['terms'] as $term) {
    if ($term->vid != 3) {
      if ($term->vid == 2 || $term->vid == 5) {
        $terms[] = l($term->name, 'lydavis/' . $term->tid);
      }
      else {
        $terms[] = l($term->name, 'kategori/' . $term->tid);
      }
    }
  }
  $output .= theme('item_list', $terms, NULL, 'ul', array('class' => 'terms'));
  $output .= '</div>';
  return $output;
}

/**
 * Function to make a playlist.m3u that users can download
 */
function kkblyd_pages_make_playlist() {
  $arg = arg(1);
  if ($arg == 'idag') {
    if (date('H') > 11) {
      $date = date('Y-m-d') . 'T00:00:00';
    }
    else {
      $date = date('Y-m-d', time() - 86400) . 'T00:00:00';
    }
    $result = db_query("SELECT filepath FROM {files} AS f
                        JOIN {content_type_sound_article} AS c ON c.field_sound_article_fid = f.fid
                        JOIN {node} AS n ON n.nid = c.nid
                        WHERE c.field_publish_date_value = '$date'
                        AND n.status = 1
                        AND n.promote = 1");
  }
  else if ($arg == 'omrade') {
    $term = taxonomy_get_term(arg(2));
    if (!$term) {
      return drupal_not_found();
    }
    $result = db_query("SELECT filepath FROM {files} AS f
                        JOIN {content_type_sound_article} AS c ON c.field_sound_article_fid = f.fid
                        JOIN {term_node} AS t ON t.nid = c.nid
                        JOIN {node} AS n ON n.nid = c.nid
                        WHERE t.tid = %d
                        AND n.status = 1", $term->tid);
  }
  else {
    if (preg_match('/[^0-9\-]/', $arg)) {
      return drupal_not_found();
    }
    $nid = explode('-', $arg);
    $lookup = '(' . join(',', $nid) . ')';
    $result = db_query("SELECT filepath FROM {files} AS f
                        JOIN {content_type_sound_article} AS c ON c.field_sound_article_fid = f.fid
                        JOIN {node} AS n ON n.nid = c.nid
                        WHERE c.nid IN %s
                        AND n.status = 1", $lookup);
  }
  $path = '';
  while ($row = db_result($result)) {
    $path .= url($row, array('absolute' => TRUE)) . PHP_EOL;
  }
  if (!empty($path)) {
  drupal_set_header('Content-Type: audio/x-mpegurl; charset=utf-8');
  drupal_set_header('Content-Disposition: attachment; filename="playlist.m3u"');
    echo $path;
  }
  else {
    drupal_goto('<front>');
  }
}

function kkblyd_pages_table_query($arg) {
  if (is_string($arg)) {
    if ($arg == 'alle') {
      return db_query("SELECT n.title, n.nid, n.vid, c.field_sound_article_data, f.filesize, f.filepath, f.fid FROM {node} AS n
                         JOIN {content_type_sound_article} AS c ON c.nid = n.nid
                         JOIN {files} AS f ON f.fid = c.field_sound_article_fid
                         JOIN {term_node} AS t ON t.nid = n.nid
                         JOIN {term_data} AS td ON t.tid = td.tid
                         WHERE td.vid = 2
                         AND n.status = 1;");
    }
    $date = $arg;
    return db_query("SELECT n.title, n.nid, n.vid, c.field_sound_article_data, f.filesize, f.filepath, f.fid FROM {node} AS n
                       JOIN {content_type_sound_article} AS c ON c.nid = n.nid
                       JOIN {files} AS f ON f.fid = c.field_sound_article_fid
                       WHERE c.field_publish_date_value = '%s'
                       AND n.status = 1
                       AND n.promote = 1;", $date . 'T00:00:00');
  }
  $lookup = array(NULL, NULL, 1, 2, 3, 4, 5, 6, 0, 1, 2, 3, 4, 5, 6);
  $week_day = date('N');

  $monday = date('Y-m-d', time()-($lookup[$week_day + 7]) * 86400) . 'T00:00:00';
  $tuesday = date('Y-m-d', time()-($lookup[$week_day + 6]) * 86400) . 'T00:00:00';
  $wednesday = date('Y-m-d', time()-($lookup[$week_day + 5]) * 86400) . 'T00:00:00';
  $thirsday = date('Y-m-d', time()-($lookup[$week_day + 4]) * 86400) . 'T00:00:00';
  $friday = date('Y-m-d', time()-($lookup[$week_day + 3]) * 86400) . 'T00:00:00';
  $week = "('$monday','$tuesday','$wednesday','$thirsday','$friday')";
  if (is_object($arg)) {
    $term = $arg;
    return db_query("SELECT n.title, n.nid, n.vid, c.field_sound_article_data, f.filesize, f.filepath, f.fid FROM {node} AS n
                       JOIN {content_type_sound_article} AS c ON c.nid = n.nid
                       JOIN {files} AS f ON f.fid = c.field_sound_article_fid
                       JOIN {term_node} as t ON t.nid = n.nid
                       WHERE t.tid = %d
                       AND c.field_publish_date_value IN $week
                       AND n.status = 1;", $term->tid);
  }
  else if (is_array($arg)) {
    $terms = '(' . join(',', $arg) . ')';
    return db_query("SELECT n.title, n.nid, n.vid, c.field_sound_article_data, f.filesize, f.filepath, f.fid FROM {node} AS n
                       JOIN {content_type_sound_article} AS c ON c.nid = n.nid
                       JOIN {files} AS f ON f.fid = c.field_sound_article_fid
                       JOIN {term_node} as t ON t.nid = n.nid
                       WHERE t.tid IN $terms
                       AND c.field_publish_date_value IN $week
                       AND n.status = 1;");
  }
}

function kkblyd_pages_taxonomy_table($str_tids = '') {
  $terms = taxonomy_terms_parse_string($str_tids);
  if ($terms['operator'] != 'and' && $terms['operator'] != 'or') {
    drupal_not_found();
  }
  if ($terms['tids']) {
    $result = db_query(db_rewrite_sql('SELECT t.tid, t.name FROM {term_data} t WHERE t.tid IN ('. db_placeholders($terms['tids']) .')', 't', 'tid'), $terms['tids']);
    $tids = array(); // we rebuild the $tids-array so it only contains terms the user has access to.
    $names = array();
    while ($term = db_fetch_object($result)) {
      $tids[] = $term->tid;
      $names[] = $term->name;
    }
    _kkblyd_pages_feed_head(t('The daily sound article from @terms', array('@terms' => join(', ', $names))), url('podcast/' . $term->tid));
    drupal_set_title(t('Podcasts from: @terms', array('@terms' => join(', ', $names))));
  }
  else {
    return drupal_not_found();
  }
  drupal_add_js(drupal_get_path('module', 'kkblyd_pages') . '/form.js');
  return drupal_get_form('kkblud_pages_get_table_form', $tids);
}

function theme_kkblud_pages_render_title_header($title, $note) {
  $markup = '<div class="title-wrapper">';
  $markup .= "<h2 class=\"title\">$title<span class=\"marked\">$note</span></h2>";
  $markup .= '</div>';
  return $markup;
}

/**
 * Implementation of hook_block().
 */
function kkblyd_pages_block($op = 'list', $delta = 0, $edit = array()) {
  switch ($op) {

    case 'list':
      $blocks[0]['info'] = t('Kkblyd_pages todays articles');
      $blocks[1]['info'] = t('Kkblyd_pages area articles');
      $blocks[2]['info'] = t('Kkblyd_pages front page header');
      $blocks[3]['info'] = t('Kkblyd_pages sound paper header');
      return $blocks;

    case 'configure':
      if ($delta == 2 && user_access('administer kkblyd blocks')) {
        $form['kkblyd_pages_front'] = array(
          '#type' => 'fieldset',
          '#title' => t('Front page text'),
          '#collapsible' => TRUE,
        );
        $form['kkblyd_pages_front']['main'] = array(
          '#type' => 'textarea',
          '#title' => t('Main'),
          '#description' => t('The text you enter here will appear in the middel region.'),
          '#default_value' => variable_get('kkblyd_pages_front_main', ''),
          '#cols' => 60,
          '#rows' => 5,
        );
        $form['kkblyd_pages_front']['sidebar'] = array(
          '#type' => 'textarea',
          '#title' => t('Sidebar'),
          '#description' => t('The text you enter here appears in the right sidebar region.'),
          '#default_value' => variable_get('kkblyd_pages_front_sidebar', ''),
          '#cols' => 60,
          '#rows' => 5,
        );
        
      }
      else if ($delta == 3 && user_access('administer kkblyd blocks')) {
        $form['kkblyd_pages_sound'] = array(
          '#type' => 'fieldset',
          '#title' => t('Front page text'),
          '#collapsible' => TRUE,
        );
        $form['kkblyd_pages_sound']['left'] = array(
          '#type' => 'textarea',
          '#title' => t('Left'),
          '#description' => t('The text you enter here will appear in the left region.'),
          '#default_value' => variable_get('kkblyd_pages_sound_paper', ''),
          '#cols' => 60,
          '#rows' => 5,
        );
      }
      return $form;

    case 'save':
      if ($delta == 2) {
        variable_set('kkblyd_pages_front_main', $edit['main']);
        variable_set('kkblyd_pages_front_sidebar', $edit['sidebar']);
      }
      else if ($delta == 3) {
        variable_set('kkblyd_pages_sound_paper', $edit['left']);
      }
      break;

    case 'view':
      if ($delta == 0) {
        $block['content'] = theme('kkblyd_pages_todays_block');
      }
      if ($delta == 1) {
        $block['content'] = theme('kkblyd_pages_area_block');
      }
      if ($delta == 2) {
        $block['content'] = theme('kkblyd_pages_front_page_header_block');
      }
      if ($delta == 3) {
        $block['content'] = theme('kkblyd_pages_sounder_paper_header_block');
      }
      return $block;
  }
}

function theme_kkblyd_pages_todays_block() {
  if (date('H') > 11) {
    $date = format_date(time(), 'custom', 'j. F Y', NULL, 'da');
  }
  else {
    $date = format_date(time() - 86400, 'custom', 'j. F Y', NULL, 'da');
  }
  $title = t("Today's soundnews:");
  $markup = '<div clas="wrapper">';
  $markup .= "<h2 class=\"title\">$title<span class=\"marked\">$date</span></h2>";
  $markup .= '<div class="download clear-block">' . l('<span class="download"></span><span class="text">' . t("Download todays paper") . '</span>', 'playlist/idag', array('html' => TRUE)) . '</div>';
  $markup .= '</div>';
  return $markup;
}

function theme_kkblyd_pages_area_block() {
  $term = taxonomy_get_term(arg(1));
  if (!$term) {
    // alle is default.
    $term = 'alle';
  }
  if (is_string($term)) {
    $title = t("the sound news from this week from all of Copenhagen");
    $markup = '<div clas="wrapper"><div class="clear-block">';
    $markup .= "<h2 class=\"title\">$title</h2>" . '<span class="area-all"></span></div>';
  }
  else {
    $title = t("the sound news from this week from @area", array('@area' => $term->name));
    $markup .= '<div clas="wrapper"><div class="clear-block">';
    $markup .= "<h2 class=\"title\">$title</h2>" . '<span class="area-' . $term->tid . '"></span></div>';
  }
  $markup .= '<div class="download clear-block">' . l('<span class="download"></span><span class="text">' . t("Download this week paper") . '</span>', 'playlist/omraade/'. $term->tid, array('html' => TRUE)) . '</div>';
  $markup .= '</div>';
  return $markup;
}

function theme_kkblyd_pages_front_page_header_block() {
  $main = filter_xss(variable_get('kkblyd_pages_front_main', ''), array('a', 'em', 'strong', 'cite', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd', 'p', 'div', 'span'));
  $sidebar = filter_xss(variable_get('kkblyd_pages_front_sidebar', ''), array('a', 'em', 'strong', 'cite', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd', 'p', 'div', 'span'));
  if (strlen($sidebar) == 0) {
    $class = 'empty';
  }
  $markup = "$main</div><div class=\"right-sidebar $class\"><div class=\"r-wrapper\">$sidebar</div>";
  return $markup;
}

function theme_kkblyd_pages_sounder_paper_header_block() {
  $left = filter_xss(variable_get('kkblyd_pages_sound_paper', ''), array('a', 'em', 'strong', 'cite', 'code', 'ul', 'ol', 'li', 'dl', 'dt', 'dd', 'p', 'div', 'span'));
  $markup = "$left</div><div class=\"right\">";
  $terms = array();
  $result = db_query("SELECT tid, name from {term_data} WHERE vid = 2");
  while ($row = db_fetch_array($result)) {
    $terms[$row['tid']] = $row['name'];
  }
  $links = array();
  foreach ($terms as $tid => $name) {
    $links[] = array('data' => l('<span class="area-' . $tid . '"></span>' . $name, "lydavis/$tid", array("attributes" => array('class' => 'area-' . $tid), 'html' => TRUE)), 'class' => 'clear-block');
  }
  $links[] = l(t('<span class="area-all"></span>' . 'All of Copenhagen'), 'lydavis/alle', array('html' => TRUE));
  $markup .= theme('item_list', $links);
  return $markup;
}

function _kkblyd_pages_feed_head($title, $url) {
  drupal_set_html_head('<link rel="alternate" type="application/rss+xml" title="' . $title . '" href="' . $url .'" />');
}